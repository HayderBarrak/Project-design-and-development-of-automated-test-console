{"version":3,"sources":["webpack:///./src/app/features/ui-elements/tree-views/tree-views.component.html","webpack:///./src/app/features/ui-elements/tree-views/tree-views.component.ts","webpack:///./src/app/features/ui-elements/tree-views/tree-views.module.ts","webpack:///./src/app/features/ui-elements/tree-views/tree-views.routing.ts","webpack:///./src/app/shared/ui/tree-view/tree-view.component.ts","webpack:///./src/app/shared/ui/tree-view/tree-view.module.ts"],"names":[],"mappings":"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","file":"tree-views-tree-views-module.js","sourcesContent":["module.exports = \"<div id=\\\"content\\\">\\n  <div class=\\\"row\\\">\\n    <sa-big-breadcrumbs [items]=\\\"['UI Elements', 'Tree View']\\\" icon=\\\"desktop\\\" class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-4\\\"></sa-big-breadcrumbs>\\n    <sa-stats></sa-stats>\\n  </div>\\n  <!-- widget grid -->\\n  <sa-widgets-grid>\\n    <!-- row -->\\n    <div class=\\\"row\\\">\\n      <!-- NEW WIDGET START -->\\n      <article class=\\\"col-sm-12 col-md-12 col-lg-6\\\">\\n        <!-- Widget ID (each widget will need unique ID)-->\\n        <div sa-widget [editbutton]=\\\"false\\\" color=\\\"orange\\\">\\n          <!-- widget options:\\n          usage: <div sa-widget id=\\\"wid-id-0\\\" [editbutton]=\\\"false\\\">\\n          [colorbutton]=\\\"false\\\"\\n          [editbutton]=\\\"false\\\"\\n          [togglebutton]=\\\"false\\\"\\n          [deletebutton]=\\\"false\\\"\\n          [fullscreenbutton]=\\\"false\\\"\\n          [custombutton]=\\\"false\\\"\\n          [collapsed]=\\\"true\\\"\\n          [sortable]=\\\"false\\\"\\n          -->\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-lg fa-calendar\\\"></i> </span>\\n            <h2>Organizing view </h2>\\n          </header>\\n          <!-- widget div-->\\n          <div>            <!-- widget content -->\\n            <div class=\\\"widget-body\\\">\\n              <div class=\\\"widget-body-toolbar bg-color-white\\\">\\n                <form class=\\\"form-inline\\\" role=\\\"form\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-12 col-md-10\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"sr-only\\\">Task title</label>\\n                        <input [(ngModel)]=\\\"task\\\" name=\\\"task\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"My Task\\\">\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"sr-only\\\">Pick Week</label>\\n                        <select [(ngModel)]=\\\"week\\\" name=\\\"week\\\" class=\\\"form-control input-sm\\\">\\n                          <option>Week 1</option>\\n                          <option>Week 2</option>\\n                        </select>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"sr-only\\\">Days</label>\\n                        <select [(ngModel)]=\\\"day\\\" name=\\\"day\\\" class=\\\"form-control input-sm\\\">\\n\\n                          <option [value]=\\\"day\\\" *ngFor=\\\"let day of days\\\">{{day}}</option>\\n                        </select>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-sm-12 col-md-2 text-align-right\\\">\\n                      <button (click)=\\\"add()\\\" class=\\\"btn btn-warning btn-xs\\\">\\n                        <i class=\\\"fa fa-plus\\\"></i> Add\\n                      </button>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n              <div >\\n                <sa-tree-view [items]=\\\"demo1\\\" (change)=\\\"changeLstener($event)\\\" ></sa-tree-view>\\n              </div>\\n            </div>\\n            <!-- end widget content -->\\n          </div>\\n          <!-- end widget div -->\\n        </div>\\n        <!-- end widget -->\\n      </article>\\n      <!-- WIDGET END -->\\n      <!-- NEW WIDGET START -->\\n      <article class=\\\"col-sm-12 col-md-12 col-lg-6\\\">\\n        <!-- Widget ID (each widget will need unique ID)-->\\n        <div sa-widget [editbutton]=\\\"false\\\" color=\\\"blue\\\">\\n          <!-- widget options:\\n          usage: <div sa-widget id=\\\"wid-id-0\\\" [editbutton]=\\\"false\\\">\\n          [colorbutton]=\\\"false\\\"\\n          [editbutton]=\\\"false\\\"\\n          [togglebutton]=\\\"false\\\"\\n          [deletebutton]=\\\"false\\\"\\n          [fullscreenbutton]=\\\"false\\\"\\n          [custombutton]=\\\"false\\\"\\n          [collapsed]=\\\"true\\\"\\n          [sortable]=\\\"false\\\"\\n          -->\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-sitemap\\\"></i> </span>\\n            <h2>Simple View </h2>\\n          </header>\\n          <!-- widget div-->\\n          <div>            <!-- widget content -->\\n            <div class=\\\"widget-body\\\">\\n              <div class=\\\"tree smart-form\\\">\\n                <sa-tree-view [items]=\\\"demo2\\\" (change)=\\\"changeLstener($event)\\\"></sa-tree-view>\\n              </div>\\n            </div>\\n            <!-- end widget content -->\\n          </div>\\n          <!-- end widget div -->\\n        </div>\\n        <!-- end widget -->\\n      </article>\\n      <!-- WIDGET END -->\\n    </div>\\n    <!-- end row -->\\n    <!-- row -->\\n    <div class=\\\"row\\\">\\n    </div>\\n    <!-- end row -->\\n  </sa-widgets-grid>\\n  <!-- end widget grid -->\\n</div>\\n\"","import {Component, OnInit, Input} from '@angular/core';\nimport { JsonApiService } from '@app/core/services';\n\n@Component({\n  selector: 'sa-tree-views',\n  templateUrl: './tree-views.component.html',\n\n})\nexport class TreeViewsComponent implements OnInit {\n\n  @Input() task:string\n  @Input() week:string\n  @Input() day:string\n\n  public days = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n    'Sunday'];\n\n\n  public demo1:any;\n  public demo2:any;\n\n  constructor(private jsonApiService:JsonApiService) {\n  }\n\n  add() {\n    console.log(this.task, this.day)\n  }\n\n  ngOnInit() {\n    this.jsonApiService.fetch('/ui-examples/tree-view.json').subscribe(data=> {\n      this.demo1 = data.demo1;\n      this.demo2 = data.demo2;\n    })\n  }\n\n  changeLstener(payload) {\n    console.log('change payload', payload)\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { treeViewsRouting } from './tree-views.routing';\nimport {TreeViewsComponent} from \"./tree-views.component\";\nimport { SharedModule } from '@app/shared/shared.module';\nimport { TreeViewModule } from '@app/shared/ui/tree-view/tree-view.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    treeViewsRouting,\n    SharedModule,\n    TreeViewModule\n  ],\n  declarations: [TreeViewsComponent]\n})\nexport class TreeViewsModule { }\n","\nimport {ModuleWithProviders} from \"@angular/core\"\nimport { Routes, RouterModule } from '@angular/router';\nimport {TreeViewsComponent} from \"./tree-views.component\";\n\nexport const treeViewsRoutes: Routes = [{\n  path: '',\n  component: TreeViewsComponent\n}];\n\nexport const treeViewsRouting = RouterModule.forChild(treeViewsRoutes);\n\n","import {Component, OnInit, OnChanges, ElementRef, Input, Output, EventEmitter, Renderer} from '@angular/core';\n\n@Component({\n\n  selector: 'sa-tree-view',\n  template: '<div class=\"sa-tree-view tree\"></div>',\n})\nexport class TreeViewComponent implements OnChanges {\n\n  @Input() items: any;\n  @Output() change = new EventEmitter<any>();\n\n  constructor(private el:ElementRef, private renderer: Renderer) {\n  }\n\n  ngOnChanges() {\n    this.items && this.render();\n  }\n\n  private render(){\n    const root = this.el.nativeElement.getElementsByTagName('div')[0];\n    root.appendChild(this.createBranch(this.items, {expanded: true}));\n  }\n\n\n  private createChild(item) {\n    let i, branch;\n    const li = document.createElement('li');\n    li.innerHTML = item.content;\n\n    if (item.children){\n      li.className += ' parent_li';\n\n      i = this.addPlusMinusSign(li, item);\n\n      branch = this.createBranch(item.children, item);\n\n      li.appendChild(branch)\n    }\n\n    this.renderer.listen(li, 'click', (event) => {\n      event.stopPropagation();\n\n\n\n      if(item.children){\n        item.expanded = !item.expanded\n        this.togglePlusMinusSign(i, item)\n        branch.className = item.expanded ? '' : 'hidden'\n      }\n\n      this.change.emit(item)\n    });\n\n    return li;\n  }\n\n  private createBranch(items, parent: any) {\n    const ul = document.createElement('ul');\n    items.forEach(item=> {\n      ul.appendChild(this.createChild(item))\n    });\n\n\n    ul.className = parent.expanded ? '' : 'hidden';\n\n    return ul\n  }\n\n  private addPlusMinusSign(li, item){\n    const i = document.createElement('i');\n\n    this.togglePlusMinusSign(i, item);\n    const span = li.getElementsByTagName('span')[0]\n\n    if(span){\n      span.appendChild(i)\n    }else{\n      li.appendChild(i)\n    }\n\n    return i\n  }\n\n  private togglePlusMinusSign(i, item){\n    i.className = item.expanded ? 'sa-icon fa fa-lg fa-minus-circle' : 'sa-icon fa fa-lg fa-plus-circle'\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TreeViewComponent } from './tree-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [TreeViewComponent],\n  exports: [TreeViewComponent]\n})\nexport class TreeViewModule { }\n"],"sourceRoot":""}