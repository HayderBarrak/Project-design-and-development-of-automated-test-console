{"version":3,"sources":["webpack:///./src/app/features/forms/bootstrap-validation/attribute-form/attribute-form.component.html","webpack:///./src/app/features/forms/bootstrap-validation/attribute-form/attribute-form.component.ts","webpack:///./src/app/features/forms/bootstrap-validation/bootstrap-validation.component.html","webpack:///./src/app/features/forms/bootstrap-validation/bootstrap-validation.component.ts","webpack:///./src/app/features/forms/bootstrap-validation/bootstrap-validation.module.ts","webpack:///./src/app/features/forms/bootstrap-validation/bootstrap-validation.routing.ts","webpack:///./src/app/features/forms/bootstrap-validation/button-group-form/button-group-form.component.html","webpack:///./src/app/features/forms/bootstrap-validation/button-group-form/button-group-form.component.ts","webpack:///./src/app/features/forms/bootstrap-validation/contact-form/contact-form.component.html","webpack:///./src/app/features/forms/bootstrap-validation/contact-form/contact-form.component.ts","webpack:///./src/app/features/forms/bootstrap-validation/movie-form/movie-form.component.html","webpack:///./src/app/features/forms/bootstrap-validation/movie-form/movie-form.component.ts","webpack:///./src/app/features/forms/bootstrap-validation/product-form/product-form.component.html","webpack:///./src/app/features/forms/bootstrap-validation/product-form/product-form.component.ts","webpack:///./src/app/features/forms/bootstrap-validation/profile-form/profile-form.component.html","webpack:///./src/app/features/forms/bootstrap-validation/profile-form/profile-form.component.ts","webpack:///./src/app/features/forms/bootstrap-validation/toggling-form/toggling-form.component.html","webpack:///./src/app/features/forms/bootstrap-validation/toggling-form/toggling-form.component.ts"],"names":[],"mappings":"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","file":"bootstrap-validation-bootstrap-validation-module.js","sourcesContent":["module.exports = \"<form id=\\\"attributeForm\\\" (ngSubmit)=\\\"onSubmit()\\\"\\n      novalidate=\\\"novalidate\\\" saBootstrapValidator\\n      class=\\\"form-horizontal\\\"\\n      data-bv-message=\\\"This value is not valid\\\"\\n      data-bv-feedbackicons-valid=\\\"glyphicon glyphicon-ok\\\"\\n      data-bv-feedbackicons-invalid=\\\"glyphicon glyphicon-remove\\\"\\n      data-bv-feedbackicons-validating=\\\"glyphicon glyphicon-refresh\\\">\\n\\n  <fieldset>\\n    <legend>\\n      Set validator options via HTML attributes\\n    </legend>\\n\\n    <div class=\\\"alert alert-warning\\\">\\n      <code>&lt; input\\n        data-bv-validatorname\\n        data-bv-validatorname-validatoroption=\\\"...\\\" / &gt;</code>\\n\\n      <br/>\\n      <br/>\\n      More validator options can be found here:\\n      <a href=\\\"http://bootstrapvalidator.com/validators/\\\" target=\\\"_blank\\\">http://bootstrapvalidator.com/validators/</a>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Full name</label>\\n      <div class=\\\"col-lg-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" placeholder=\\\"First name\\\"\\n               data-bv-notempty=\\\"true\\\"\\n               data-bv-notempty-message=\\\"The first name is required and cannot be empty\\\"/>\\n      </div>\\n      <div class=\\\"col-lg-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" placeholder=\\\"Last name\\\"\\n               data-bv-notempty=\\\"true\\\"\\n               data-bv-notempty-message=\\\"The last name is required and cannot be empty\\\"/>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Username</label>\\n      <div class=\\\"col-lg-5\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\"\\n               data-bv-message=\\\"The username is not valid\\\" data-bv-notempty=\\\"true\\\"\\n               data-bv-notempty-message=\\\"The username is required and cannot be empty\\\"\\n               data-bv-regexp=\\\"true\\\" data-bv-regexp-regexp=\\\"^[a-zA-Z0-9_\\\\.]+$\\\"\\n               data-bv-regexp-message=\\\"The username can only consist of alphabetical, number, dot and underscore\\\"\\n               data-bv-stringlength=\\\"true\\\" data-bv-stringlength-min=\\\"6\\\"\\n               data-bv-stringlength-max=\\\"30\\\"\\n               data-bv-stringlength-message=\\\"The username must be more than 6 and less than 30 characters long\\\"\\n               data-bv-different=\\\"true\\\" data-bv-different-field=\\\"password\\\"\\n               data-bv-different-message=\\\"The username and password cannot be the same as each other\\\"/>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Email address</label>\\n      <div class=\\\"col-lg-5\\\">\\n        <input class=\\\"form-control\\\" name=\\\"email\\\" type=\\\"email\\\" data-bv-emailaddress=\\\"true\\\"\\n               data-bv-emailaddress-message=\\\"The input is not a valid email address\\\"/>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Password</label>\\n      <div class=\\\"col-lg-5\\\">\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" data-bv-notempty=\\\"true\\\"\\n               data-bv-notempty-message=\\\"The password is required and cannot be empty\\\"\\n               data-bv-identical=\\\"true\\\" data-bv-identical-field=\\\"confirmPassword\\\"\\n               data-bv-identical-message=\\\"The password and its confirm are not the same\\\"\\n               data-bv-different=\\\"true\\\" data-bv-different-field=\\\"username\\\"\\n               data-bv-different-message=\\\"The password cannot be the same as username\\\"/>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Retype password</label>\\n      <div class=\\\"col-lg-5\\\">\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirmPassword\\\"\\n               data-bv-notempty=\\\"true\\\"\\n               data-bv-notempty-message=\\\"The confirm password is required and cannot be empty\\\"\\n               data-bv-identical=\\\"true\\\" data-bv-identical-field=\\\"password\\\"\\n               data-bv-identical-message=\\\"The password and its confirm are not the same\\\"\\n               data-bv-different=\\\"true\\\" data-bv-different-field=\\\"username\\\"\\n               data-bv-different-message=\\\"The password cannot be the same as username\\\"/>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Languages</label>\\n      <div class=\\\"col-lg-5\\\">\\n        <div class=\\\"checkbox\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\" name=\\\"languages[]\\\" value=\\\"english\\\"\\n                   data-bv-message=\\\"Please specify at least one language you can speak\\\"\\n                   data-bv-notempty=\\\"true\\\"/>\\n            English </label>\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\" name=\\\"languages[]\\\" value=\\\"french\\\"/>\\n            French </label>\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\" name=\\\"languages[]\\\" value=\\\"german\\\"/>\\n            German </label>\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\" name=\\\"languages[]\\\" value=\\\"russian\\\"/>\\n            Russian </label>\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\" name=\\\"languages[]\\\" value=\\\"other\\\"/>\\n            Other </label>\\n        </div>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <div class=\\\"form-actions\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n          <i class=\\\"fa fa-eye\\\"></i>\\n          Validate\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\n  selector: 'sa-attribute-form',\n  templateUrl: './attribute-form.component.html',\n})\nexport class AttributeFormComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n  submitted = false;\n  onSubmit() {\n    this.submitted = true;\n    console.log('submitted')\n  }\n\n}\n","module.exports = \"<div id=\\\"content\\\">\\n\\n  <div class=\\\"row\\\">\\n    <sa-big-breadcrumbs [items]=\\\"['Forms', 'Bootstrap Form Validation']\\\" icon=\\\"pencil-square-o\\\" class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-4\\\"></sa-big-breadcrumbs>\\n    <sa-stats></sa-stats>\\n  </div>\\n\\n  <!--\\n      The ID \\\"widget-grid\\\" will start to initialize all widgets below\\n      You do not need to use widgets if you dont want to. Simply remove\\n      the <section></section> and you can use wells or panels instead\\n      -->\\n\\n  <!-- widget grid -->\\n  <sa-widgets-grid>\\n\\n    <!-- row -->\\n    <div class=\\\"row\\\">\\n\\n      <!-- NEW WIDGET ROW START -->\\n      <div class=\\\"col-sm-6\\\">\\n\\n        <!-- Widget ID (each widget will need unique ID)-->\\n        <div sa-widget [colorbutton]=\\\"false\\\" [editbutton]=\\\"false\\\" [deletebutton]=\\\"false\\\" [sortable]=\\\"false\\\">\\n          <!-- widget options:\\n          usage: <div sa-widget [editbutton]=\\\"false\\\">\\n\\n          [colorbutton]=\\\"false\\\"\\n          [editbutton]=\\\"false\\\"\\n          [togglebutton]=\\\"false\\\"\\n          [deletebutton]=\\\"false\\\"\\n          [fullscreenbutton]=\\\"false\\\"\\n          [custombutton]=\\\"false\\\"\\n          [collapsed]=\\\"true\\\"\\n          [sortable]=\\\"false\\\"\\n\\n          -->\\n          <header>\\n            <h2>#movieForm </h2>\\n          </header>\\n\\n          <!-- widget div-->\\n\\n          <div>\\n\\n\\n            <!-- widget content -->\\n            <div class=\\\"widget-body\\\">\\n\\n              <sa-movie-form></sa-movie-form>\\n            </div>\\n            <!-- end widget content -->\\n\\n          </div>\\n          <!-- end widget div -->\\n\\n        </div>\\n        <!-- end widget -->\\n\\n        <!-- Widget ID (each widget will need unique ID)-->\\n        <div sa-widget [colorbutton]=\\\"false\\\" [editbutton]=\\\"false\\\" [deletebutton]=\\\"false\\\" [sortable]=\\\"false\\\">\\n          <!-- widget options:\\n          usage: <div sa-widget [editbutton]=\\\"false\\\">\\n\\n          [colorbutton]=\\\"false\\\"\\n          [editbutton]=\\\"false\\\"\\n          [togglebutton]=\\\"false\\\"\\n          [deletebutton]=\\\"false\\\"\\n          [fullscreenbutton]=\\\"false\\\"\\n          [custombutton]=\\\"false\\\"\\n          [collapsed]=\\\"true\\\"\\n          [sortable]=\\\"false\\\"\\n\\n          -->\\n          <header>\\n            <h2>#togglingForm </h2>\\n          </header>\\n\\n          <!-- widget div-->\\n\\n          <div>\\n\\n\\n            <!-- widget content -->\\n            <div class=\\\"widget-body\\\">\\n\\n\\n              <sa-toggling-form></sa-toggling-form>\\n\\n            </div>\\n            <!-- end widget content -->\\n\\n          </div>\\n          <!-- end widget div -->\\n\\n        </div>\\n        <!-- end widget -->\\n\\n        <!-- Widget ID (each widget will need unique ID)-->\\n        <div sa-widget [colorbutton]=\\\"false\\\" [editbutton]=\\\"false\\\" [deletebutton]=\\\"false\\\" [sortable]=\\\"false\\\">\\n          <!-- widget options:\\n          usage: <div sa-widget [editbutton]=\\\"false\\\">\\n\\n          [colorbutton]=\\\"false\\\"\\n          [editbutton]=\\\"false\\\"\\n          [togglebutton]=\\\"false\\\"\\n          [deletebutton]=\\\"false\\\"\\n          [fullscreenbutton]=\\\"false\\\"\\n          [custombutton]=\\\"false\\\"\\n          [collapsed]=\\\"true\\\"\\n          [sortable]=\\\"false\\\"\\n\\n          -->\\n          <header>\\n            <h2>#attributeForm </h2>\\n          </header>\\n\\n          <!-- widget div-->\\n\\n          <div>\\n\\n\\n            <!-- widget content -->\\n            <div class=\\\"widget-body\\\">\\n\\n              <sa-attribute-form></sa-attribute-form>\\n            </div>\\n            <!-- end widget content -->\\n\\n          </div>\\n          <!-- end widget div -->\\n\\n        </div>\\n        <!-- end widget -->\\n\\n      </div>\\n      <!-- WIDGET ROW END -->\\n\\n      <!-- NEW WIDGET ROW START -->\\n      <div class=\\\"col-sm-6\\\">\\n\\n        <!-- Widget ID (each widget will need unique ID)-->\\n        <div sa-widget [colorbutton]=\\\"false\\\" [editbutton]=\\\"false\\\" [deletebutton]=\\\"false\\\" [sortable]=\\\"false\\\">\\n          <!-- widget options:\\n          usage: <div sa-widget [editbutton]=\\\"false\\\">\\n\\n          [colorbutton]=\\\"false\\\"\\n          [editbutton]=\\\"false\\\"\\n          [togglebutton]=\\\"false\\\"\\n          [deletebutton]=\\\"false\\\"\\n          [fullscreenbutton]=\\\"false\\\"\\n          [custombutton]=\\\"false\\\"\\n          [collapsed]=\\\"true\\\"\\n          [sortable]=\\\"false\\\"\\n\\n          -->\\n          <header>\\n            <h2>#buttonGroupForm </h2>\\n          </header>\\n\\n          <!-- widget div-->\\n\\n          <div>\\n\\n\\n            <!-- widget content -->\\n            <div class=\\\"widget-body\\\">\\n\\n\\n              <sa-button-group-form></sa-button-group-form>\\n            </div>\\n            <!-- end widget content -->\\n\\n          </div>\\n          <!-- end widget div -->\\n\\n        </div>\\n        <!-- end widget -->\\n\\n        <!-- Widget ID (each widget will need unique ID)-->\\n        <div sa-widget [colorbutton]=\\\"false\\\" [editbutton]=\\\"false\\\" [deletebutton]=\\\"false\\\" [sortable]=\\\"false\\\">\\n          <!-- widget options:\\n          usage: <div sa-widget [editbutton]=\\\"false\\\">\\n\\n          [colorbutton]=\\\"false\\\"\\n          [editbutton]=\\\"false\\\"\\n          [togglebutton]=\\\"false\\\"\\n          [deletebutton]=\\\"false\\\"\\n          [fullscreenbutton]=\\\"false\\\"\\n          [custombutton]=\\\"false\\\"\\n          [collapsed]=\\\"true\\\"\\n          [sortable]=\\\"false\\\"\\n\\n          -->\\n          <header>\\n            <h2>#productForm </h2>\\n          </header>\\n\\n          <!-- widget div-->\\n\\n          <div>\\n\\n\\n            <!-- widget content -->\\n            <div class=\\\"widget-body\\\">\\n\\n              <sa-product-form></sa-product-form>\\n            </div>\\n            <!-- end widget content -->\\n\\n          </div>\\n          <!-- end widget div -->\\n\\n        </div>\\n        <!-- end widget -->\\n\\n        <!-- Widget ID (each widget will need unique ID)-->\\n        <div sa-widget [colorbutton]=\\\"false\\\" [editbutton]=\\\"false\\\" [deletebutton]=\\\"false\\\" [sortable]=\\\"false\\\">\\n          <!-- widget options:\\n          usage: <div sa-widget [editbutton]=\\\"false\\\">\\n\\n          [colorbutton]=\\\"false\\\"\\n          [editbutton]=\\\"false\\\"\\n          [togglebutton]=\\\"false\\\"\\n          [deletebutton]=\\\"false\\\"\\n          [fullscreenbutton]=\\\"false\\\"\\n          [custombutton]=\\\"false\\\"\\n          [collapsed]=\\\"true\\\"\\n          [sortable]=\\\"false\\\"\\n\\n          -->\\n          <header>\\n            <h2>#profileForm </h2>\\n          </header>\\n\\n          <!-- widget div-->\\n\\n          <div>\\n\\n\\n            <!-- widget content -->\\n            <div class=\\\"widget-body\\\">\\n\\n              <sa-profile-form></sa-profile-form>\\n            </div>\\n            <!-- end widget content -->\\n\\n          </div>\\n          <!-- end widget div -->\\n\\n        </div>\\n        <!-- end widget -->\\n\\n        <!-- Widget ID (each widget will need unique ID)-->\\n        <div sa-widget [colorbutton]=\\\"false\\\" [editbutton]=\\\"false\\\" [deletebutton]=\\\"false\\\" [sortable]=\\\"false\\\">\\n          <!-- widget options:\\n          usage: <div sa-widget [editbutton]=\\\"false\\\">\\n\\n          [colorbutton]=\\\"false\\\"\\n          [editbutton]=\\\"false\\\"\\n          [togglebutton]=\\\"false\\\"\\n          [deletebutton]=\\\"false\\\"\\n          [fullscreenbutton]=\\\"false\\\"\\n          [custombutton]=\\\"false\\\"\\n          [collapsed]=\\\"true\\\"\\n          [sortable]=\\\"false\\\"\\n\\n          -->\\n          <header>\\n            <h2>#contactForm </h2>\\n          </header>\\n\\n          <!-- widget div-->\\n\\n          <div>\\n\\n\\n            <!-- widget content -->\\n            <div class=\\\"widget-body\\\">\\n\\n\\n              <sa-contact-form></sa-contact-form>\\n            </div>\\n            <!-- end widget content -->\\n\\n          </div>\\n          <!-- end widget div -->\\n\\n        </div>\\n        <!-- end widget -->\\n      </div>\\n      <!-- WIDGET ROW END -->\\n\\n    </div>\\n\\n    <!-- end row -->\\n\\n  </sa-widgets-grid>\\n  <!-- end widget grid -->\\n\\n</div>\\n<!-- END MAIN CONTENT -->\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'sa-bootstrap-validation',\n  templateUrl: './bootstrap-validation.component.html',\n})\nexport class BootstrapValidationComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component, OnInit, NgModule} from '@angular/core';\nimport {MovieFormComponent} from \"./movie-form/movie-form.component\";\nimport {TogglingFormComponent} from \"./toggling-form/toggling-form.component\";\nimport {AttributeFormComponent} from \"./attribute-form/attribute-form.component\";\nimport {ButtonGroupFormComponent} from \"./button-group-form/button-group-form.component\";\nimport {ProductFormComponent} from \"./product-form/product-form.component\";\nimport {ProfileFormComponent} from \"./profile-form/profile-form.component\";\nimport {ContactFormComponent} from \"./contact-form/contact-form.component\";\nimport {BootstrapValidationComponent} from \"./bootstrap-validation.component\";\nimport {bootstrapValidationRouting} from \"./bootstrap-validation.routing\";\nimport { SmartadminValidationModule } from '@app/shared/forms/validation/smartadmin-validation.module';\nimport { SharedModule } from '@app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    SmartadminValidationModule,\n    bootstrapValidationRouting\n  ],\n  declarations: [ MovieFormComponent, TogglingFormComponent, ContactFormComponent,\n    AttributeFormComponent, ButtonGroupFormComponent, ProductFormComponent, ProfileFormComponent,\n    BootstrapValidationComponent,\n  ],\n  exports: []\n\n})\nexport class BootstrapValidationModule{}\n","\nimport {ModuleWithProviders} from \"@angular/core\"\nimport { Routes, RouterModule } from '@angular/router';\nimport {BootstrapValidationComponent} from \"./bootstrap-validation.component\";\n\nexport const bootstrapValidationRoutes: Routes = [{\n  path: '',\n  component: BootstrapValidationComponent\n}];\n\nexport const bootstrapValidationRouting = RouterModule.forChild(bootstrapValidationRoutes);\n\n","module.exports = \"<form id=\\\"buttonGroupForm\\\" (ngSubmit)=\\\"onSubmit()\\\"\\n      novalidate=\\\"novalidate\\\" [saBootstrapValidator]=\\\"validatorOptions\\\" class=\\\"form-horizontal\\\">\\n\\n  <fieldset>\\n    <legend>\\n      Default Form Elements\\n    </legend>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Gender</label>\\n      <div class=\\\"col-lg-9\\\">\\n        <div class=\\\"btn-group\\\" data-toggle=\\\"buttons\\\">\\n          <label class=\\\"btn btn-default\\\" [saToggleActive]=\\\"model.gender == 'male'\\\">\\n            <input type=\\\"radio\\\" name=\\\"gender\\\" [(ngModel)]=\\\"model.gender\\\" value=\\\"male\\\"/>\\n            Male </label>\\n          <label class=\\\"btn btn-default\\\" [saToggleActive]=\\\"model.gender == 'female'\\\">\\n            <input type=\\\"radio\\\" name=\\\"gender\\\" [(ngModel)]=\\\"model.gender\\\" value=\\\"female\\\"/>\\n            Female </label>\\n          <label class=\\\"btn btn-default\\\" [saToggleActive]=\\\"model.gender == 'other'\\\">\\n            <input type=\\\"radio\\\" name=\\\"gender\\\" [(ngModel)]=\\\"model.gender\\\" value=\\\"other\\\"/>\\n            Other </label>\\n        </div>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Languages</label>\\n      <div class=\\\"col-lg-9\\\">\\n        <div class=\\\"btn-group\\\" data-toggle=\\\"buttons\\\">\\n          <label class=\\\"btn btn-default\\\" [saToggleActive]=\\\"lang.selected\\\" *ngFor=\\\"let lang of model.languages\\\">\\n            <input type=\\\"checkbox\\\" name=\\\"languages\\\"  [(ngModel)]=\\\"lang.selected\\\"/>\\n            {{lang.value}}</label>\\n        </div>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <div class=\\\"form-actions\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n          <i class=\\\"fa fa-eye\\\"></i>\\n          Validate\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</form>\\n\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n\n  selector: 'sa-button-group-form',\n  templateUrl: './button-group-form.component.html',\n})\nexport class ButtonGroupFormComponent implements OnInit {\n\n  validatorOptions = {\n    excluded: ':disabled',\n    feedbackIcons: {\n      valid: 'glyphicon glyphicon-ok',\n      invalid: 'glyphicon glyphicon-remove',\n      validating: 'glyphicon glyphicon-refresh'\n    },\n    fields: {\n      gender: {\n        validators: {\n          notEmpty: {\n            message: 'The gender is required'\n          }\n        }\n      },\n      'languages': {\n        validators: {\n          choice: {\n            min: 1,\n            max: 2,\n            message: 'Please choose 1 - 2 languages you can speak'\n          }\n        }\n      }\n    }\n  };\n\n\n  model = {\n    languages: [\n      {key: 'english', value: 'English', selected: false},\n      {key: 'german', value: 'German', selected: false},\n      {key: 'french', value: 'French', selected: false},\n      {key: 'russian', value: 'Russian', selected: false},\n      {key: 'italian', value: 'Italian', selected: false}\n    ],\n    gender: undefined\n  };\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  submitted = false;\n\n  onSubmit() {\n    this.submitted = true;\n    console.log('submitted')\n  }\n}\n","module.exports = \"<form id=\\\"contactForm\\\" (ngSubmit)=\\\"onSubmit()\\\"\\n      novalidate=\\\"novalidate\\\" [saBootstrapValidator]=\\\"validatorOptions\\\" class=\\\"form-horizontal\\\">\\n\\n  <fieldset>\\n    <legend>Showing messages in custom area</legend>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-3 control-label\\\">Full name</label>\\n      <div class=\\\"col-md-6\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"fullName\\\"/>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-3 control-label\\\">Email</label>\\n      <div class=\\\"col-md-6\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\"/>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-3 control-label\\\">Title</label>\\n      <div class=\\\"col-md-6\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\"/>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-md-3 control-label\\\">Content</label>\\n      <div class=\\\"col-md-6\\\">\\n        <textarea class=\\\"form-control\\\" name=\\\"content\\\" rows=\\\"5\\\"></textarea>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <!--#messages is where the messages are placed inside -->\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-md-9 col-md-offset-3\\\">\\n        <div id=\\\"messages\\\"></div>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <div class=\\\"form-actions\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n          <i class=\\\"fa fa-eye\\\"></i>\\n          Validate\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</form>\\n\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n\n  selector: 'sa-contact-form',\n  templateUrl: './contact-form.component.html',\n})\nexport class ContactFormComponent implements OnInit {\n\n  validatorOptions = {\n    container: '#messages',\n    feedbackIcons: {\n      valid: 'glyphicon glyphicon-ok',\n      invalid: 'glyphicon glyphicon-remove',\n      validating: 'glyphicon glyphicon-refresh'\n    },\n    fields: {\n      fullName: {\n        validators: {\n          notEmpty: {\n            message: 'The full name is required and cannot be empty'\n          }\n        }\n      },\n      email: {\n        validators: {\n          notEmpty: {\n            message: 'The email address is required and cannot be empty'\n          },\n          emailAddress: {\n            message: 'The email address is not valid'\n          }\n        }\n      },\n      title: {\n        validators: {\n          notEmpty: {\n            message: 'The title is required and cannot be empty'\n          },\n          stringLength: {\n            max: 100,\n            message: 'The title must be less than 100 characters long'\n          }\n        }\n      },\n      content: {\n        validators: {\n          notEmpty: {\n            message: 'The content is required and cannot be empty'\n          },\n          stringLength: {\n            max: 500,\n            message: 'The content must be less than 500 characters long'\n          }\n        }\n      }\n    }\n  };\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  submitted = false;\n\n  onSubmit() {\n    this.submitted = true;\n    console.log('submitted')\n  }\n}\n","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\"\\n  novalidate=\\\"novalidate\\\" [saBootstrapValidator]=\\\"validatorOptions\\\">\\n  <fieldset>\\n    <legend>\\n      Default Form Elements\\n    </legend>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8\\\">\\n          <label class=\\\"control-label\\\">Movie title</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\"/>\\n        </div>\\n\\n        <div class=\\\"col-md-4 selectContainer\\\">\\n          <label class=\\\"control-label\\\">Genre</label>\\n          <select class=\\\"form-control\\\" name=\\\"genre\\\">\\n            <option value=\\\"\\\">Choose a genre</option>\\n            <option value=\\\"action\\\">Action</option>\\n            <option value=\\\"comedy\\\">Comedy</option>\\n            <option value=\\\"horror\\\">Horror</option>\\n            <option value=\\\"romance\\\">Romance</option>\\n          </select>\\n        </div>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-4\\\">\\n          <label class=\\\"control-label\\\">Director</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"director\\\"/>\\n        </div>\\n\\n        <div class=\\\"col-sm-12 col-md-4\\\">\\n          <label class=\\\"control-label\\\">Writer</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"writer\\\"/>\\n        </div>\\n\\n        <div class=\\\"col-sm-12 col-md-4\\\">\\n          <label class=\\\"control-label\\\">Producer</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"producer\\\"/>\\n        </div>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-6\\\">\\n          <label class=\\\"control-label\\\">Website</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"website\\\"/>\\n        </div>\\n\\n        <div class=\\\"col-sm-12 col-md-6\\\">\\n          <label class=\\\"control-label\\\">Youtube trailer</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"trailer\\\"/>\\n        </div>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label\\\">Review</label>\\n      <textarea class=\\\"form-control\\\" name=\\\"review\\\" rows=\\\"8\\\"></textarea>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-12\\\">\\n          <label class=\\\"control-label\\\">Rating</label>\\n        </div>\\n\\n        <div class=\\\"col-sm-12 col-md-10\\\">\\n\\n          <label class=\\\"radio radio-inline no-margin\\\">\\n            <input type=\\\"radio\\\" name=\\\"rating\\\" value=\\\"terrible\\\"\\n                   class=\\\"radiobox style-2\\\"/>\\n            <span>Terrible</span> </label>\\n\\n          <label class=\\\"radio radio-inline\\\">\\n            <input type=\\\"radio\\\" name=\\\"rating\\\" value=\\\"watchable\\\"\\n                   class=\\\"radiobox style-2\\\"/>\\n            <span>Watchable</span> </label>\\n          <label class=\\\"radio radio-inline\\\">\\n            <input type=\\\"radio\\\" name=\\\"rating\\\" value=\\\"best\\\" class=\\\"radiobox style-2\\\"/>\\n            <span>Best ever</span> </label>\\n\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n  </fieldset>\\n\\n  <div class=\\\"form-actions\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n          <i class=\\\"fa fa-eye\\\"></i>\\n          Validate\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\n  selector: 'sa-movie-form',\n  templateUrl: './movie-form.component.html',\n})\nexport class MovieFormComponent implements OnInit {\n\n  validatorOptions = {\n    feedbackIcons: {\n      valid: 'glyphicon glyphicon-ok',\n      invalid: 'glyphicon glyphicon-remove',\n      validating: 'glyphicon glyphicon-refresh'\n    },\n    fields: {\n      title: {\n        group: '.col-md-8',\n        validators: {\n          notEmpty: {\n            message: 'The title is required'\n          },\n          stringLength: {\n            max: 200,\n            message: 'The title must be less than 200 characters long'\n          }\n        }\n      },\n      genre: {\n        group: '.col-md-4',\n        validators: {\n          notEmpty: {\n            message: 'The genre is required'\n          }\n        }\n      },\n      director: {\n        group: '.col-md-4',\n        validators: {\n          notEmpty: {\n            message: 'The director name is required'\n          },\n          stringLength: {\n            max: 80,\n            message: 'The director name must be less than 80 characters long'\n          }\n        }\n      },\n      writer: {\n        group: '.col-md-4',\n        validators: {\n          notEmpty: {\n            message: 'The writer name is required'\n          },\n          stringLength: {\n            max: 80,\n            message: 'The writer name must be less than 80 characters long'\n          }\n        }\n      },\n      producer: {\n        group: '.col-md-4',\n        validators: {\n          notEmpty: {\n            message: 'The producer name is required'\n          },\n          stringLength: {\n            max: 80,\n            message: 'The producer name must be less than 80 characters long'\n          }\n        }\n      },\n      website: {\n        group: '.col-md-6',\n        validators: {\n          notEmpty: {\n            message: 'The website address is required'\n          },\n          uri: {\n            message: 'The website address is not valid'\n          }\n        }\n      },\n      trailer: {\n        group: '.col-md-6',\n        validators: {\n          notEmpty: {\n            message: 'The trailer link is required'\n          },\n          uri: {\n            message: 'The trailer link is not valid'\n          }\n        }\n      },\n      review: {\n        // The group will be set as default (.form-group)\n        validators: {\n          stringLength: {\n            max: 500,\n            message: 'The review must be less than 500 characters long'\n          }\n        }\n      },\n      rating: {\n        // The group will be set as default (.form-group)\n        validators: {\n          notEmpty: {\n            message: 'The rating is required'\n          }\n        }\n      }\n    }\n  };\n\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n\n  submitted = false;\n  onSubmit() {\n    this.submitted = true;\n    console.log('submitted')\n  }\n\n}\n","module.exports = \"<form id=\\\"productForm\\\" (ngSubmit)=\\\"onSubmit()\\\"\\n      novalidate=\\\"novalidate\\\" [saBootstrapValidator]=\\\"validatorOptions\\\" class=\\\"form-horizontal\\\">\\n\\n  <fieldset>\\n    <legend>\\n      Default Form Elements\\n    </legend>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-xs-2 col-lg-3 control-label\\\">Price</label>\\n      <div class=\\\"col-xs-9 col-lg-6 inputGroupContainer\\\">\\n        <div class=\\\"input-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"price\\\"/>\\n          <span class=\\\"input-group-addon\\\">$</span>\\n        </div>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-xs-2 col-lg-3 control-label\\\">Amount</label>\\n      <div class=\\\"col-xs-9 col-lg-6 inputGroupContainer\\\">\\n        <div class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">&#8364;</span>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"amount\\\"/>\\n        </div>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-xs-2 col-lg-3 control-label\\\">Color</label>\\n      <div class=\\\"col-xs-9 col-lg-6 selectContainer\\\">\\n        <select class=\\\"form-control\\\" name=\\\"color\\\">\\n          <option value=\\\"\\\">Choose a color</option>\\n          <option value=\\\"blue\\\">Blue</option>\\n          <option value=\\\"green\\\">Green</option>\\n          <option value=\\\"red\\\">Red</option>\\n          <option value=\\\"yellow\\\">Yellow</option>\\n          <option value=\\\"white\\\">White</option>\\n        </select>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-xs-2 col-lg-3 control-label\\\">Size</label>\\n      <div class=\\\"col-xs-9 col-lg-6 selectContainer\\\">\\n        <select class=\\\"form-control\\\" name=\\\"size\\\">\\n          <option value=\\\"\\\">Choose a size</option>\\n          <option value=\\\"S\\\">S</option>\\n          <option value=\\\"M\\\">M</option>\\n          <option value=\\\"L\\\">L</option>\\n          <option value=\\\"XL\\\">XL</option>\\n        </select>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <div class=\\\"form-actions\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n          <i class=\\\"fa fa-eye\\\"></i>\\n          Validate\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'sa-product-form',\n  templateUrl: './product-form.component.html',\n})\nexport class ProductFormComponent implements OnInit {\n\n  validatorOptions = {\n    feedbackIcons: {\n      valid: 'glyphicon glyphicon-ok',\n      invalid: 'glyphicon glyphicon-remove',\n      validating: 'glyphicon glyphicon-refresh'\n    },\n    fields: {\n      price: {\n        validators: {\n          notEmpty: {\n            message: 'The price is required'\n          },\n          numeric: {\n            message: 'The price must be a number'\n          }\n        }\n      },\n      amount: {\n        validators: {\n          notEmpty: {\n            message: 'The amount is required'\n          },\n          numeric: {\n            message: 'The amount must be a number'\n          }\n        }\n      },\n      color: {\n        validators: {\n          notEmpty: {\n            message: 'The color is required'\n          }\n        }\n      },\n      size: {\n        validators: {\n          notEmpty: {\n            message: 'The size is required'\n          }\n        }\n      }\n    }\n  };\n\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  submitted = false;\n\n  onSubmit() {\n    this.submitted = true;\n    console.log('submitted')\n  }\n\n}\n","module.exports = \"<form id=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\"\\n      novalidate=\\\"novalidate\\\" [saBootstrapValidator]=\\\"validatorOptions\\\" >\\n\\n  <fieldset>\\n    <legend>\\n      Default Form Elements\\n    </legend>\\n    <div class=\\\"form-group\\\">\\n      <label>Email address</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\"/>\\n    </div>\\n  </fieldset>\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label>Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\"/>\\n    </div>\\n  </fieldset>\\n\\n  <div class=\\\"form-actions\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n          <i class=\\\"fa fa-eye\\\"></i>\\n          Validate\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n\n  selector: 'sa-profile-form',\n  templateUrl: './profile-form.component.html',\n})\nexport class ProfileFormComponent implements OnInit {\n\n  validatorOptions = {\n    feedbackIcons: {\n      valid: 'glyphicon glyphicon-ok',\n      invalid: 'glyphicon glyphicon-remove',\n      validating: 'glyphicon glyphicon-refresh'\n    },\n    fields: {\n      email: {\n        validators: {\n          notEmpty: {\n            message: 'The email address is required'\n          },\n          emailAddress: {\n            message: 'The email address is not valid'\n          }\n        }\n      },\n      password: {\n        validators: {\n          notEmpty: {\n            message: 'The password is required'\n          }\n        }\n      }\n    }\n  };\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  submitted = false;\n\n  onSubmit() {\n    this.submitted = true;\n    console.log('submitted')\n  }\n\n}\n","module.exports = \"<form id=\\\"togglingForm\\\" (ngSubmit)=\\\"onSubmit()\\\"\\n      novalidate=\\\"novalidate\\\" [saBootstrapValidator]=\\\"validatorOptions\\\" class=\\\"form-horizontal\\\">\\n\\n  <fieldset>\\n    <legend>\\n      Default Form Elements\\n    </legend>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Full name <sup>*</sup></label>\\n      <div class=\\\"col-lg-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" placeholder=\\\"First name\\\"/>\\n      </div>\\n      <div class=\\\"col-lg-4\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" placeholder=\\\"Last name\\\"/>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Company <sup>*</sup></label>\\n      <div class=\\\"col-lg-5\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"company\\\" required=\\\"true\\\" data-bv-notempty-message=\\\"The company name is required\\\"/>\\n      </div>\\n      <div class=\\\"col-lg-2\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"toggleInfo('jobInfo')\\\">\\n        Add more info\\n        </button>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n   <!--These fields will not be validated as long as they are not visible -->\\n  <div id=\\\"jobInfo\\\" [style.display]=\\\"state.jobInfo ? 'block' : 'none'\\\">\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Job title <sup>*</sup></label>\\n      <div class=\\\"col-lg-5\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"job\\\"/>\\n      </div>\\n    </div>\\n  </fieldset>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Department <sup>*</sup></label>\\n      <div class=\\\"col-lg-5\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"department\\\"/>\\n      </div>\\n    </div>\\n  </fieldset>\\n  </div>\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Mobile phone <sup>*</sup></label>\\n      <div class=\\\"col-lg-5\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"mobilePhone\\\"/>\\n      </div>\\n      <div class=\\\"col-lg-2\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"toggleInfo('phoneInfo')\\\">\\n        Add more phone numbers\\n        </button>\\n      </div>\\n    </div>\\n  </fieldset>\\n  <!--These fields will not be validated as long as they are not visible -->\\n  <div id=\\\"phoneInfo\\\" [style.display]=\\\"state.phoneInfo ? 'block' : 'none'\\\">\\n\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Home phone</label>\\n      <div class=\\\"col-lg-5\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"homePhone\\\"/>\\n      </div>\\n    </div>\\n  </fieldset>\\n  <fieldset>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-lg-3 control-label\\\">Office phone</label>\\n      <div class=\\\"col-lg-5\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"officePhone\\\"/>\\n      </div>\\n    </div>\\n  </fieldset>\\n  </div>\\n\\n  <div class=\\\"form-actions\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button class=\\\"btn btn-default\\\" type=\\\"submit\\\">\\n          <i class=\\\"fa fa-eye\\\"></i>\\n          Validate\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n\n  selector: 'sa-toggling-form',\n  templateUrl: './toggling-form.component.html',\n})\nexport class TogglingFormComponent implements OnInit {\n\n  validatorOptions = {\n    feedbackIcons: {\n      valid: 'glyphicon glyphicon-ok',\n      invalid: 'glyphicon glyphicon-remove',\n      validating: 'glyphicon glyphicon-refresh'\n    },\n    fields: {\n      firstName: {\n        validators: {\n          notEmpty: {\n            message: 'The first name is required'\n          }\n        }\n      },\n      lastName: {\n        validators: {\n          notEmpty: {\n            message: 'The last name is required'\n          }\n        }\n      },\n      company: {\n        validators: {\n          notEmpty: {\n            message: 'The company name is required'\n          }\n        }\n      },\n      // These fields will be validated when being visible\n      job: {\n        validators: {\n          notEmpty: {\n            message: 'The job title is required'\n          }\n        }\n      },\n      department: {\n        validators: {\n          notEmpty: {\n            message: 'The department name is required'\n          }\n        }\n      },\n      mobilePhone: {\n        validators: {\n          notEmpty: {\n            message: 'The mobile phone number is required'\n          },\n          digits: {\n            message: 'The mobile phone number is not valid'\n          }\n        }\n      },\n      // These fields will be validated when being visible\n      homePhone: {\n        validators: {\n          digits: {\n            message: 'The home phone number is not valid'\n          }\n        }\n      },\n      officePhone: {\n        validators: {\n          digits: {\n            message: 'The office phone number is not valid'\n          }\n        }\n      }\n    }\n  };\n\n\n  state= {\n    jobInfo: false,\n    phoneInfo: false,\n  };\n\n  toggleInfo(key){\n    this.state[key] = !this.state[key]\n  }\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n\n  submitted = false;\n  onSubmit() {\n    this.submitted = true;\n    console.log('submitted')\n  }\n\n\n}\n"],"sourceRoot":""}