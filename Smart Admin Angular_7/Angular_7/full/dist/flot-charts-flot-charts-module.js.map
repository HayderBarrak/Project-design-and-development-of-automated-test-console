{"version":3,"sources":["webpack:///./src/app/features/graphs/flot-charts/flot-charts.component.html","webpack:///./src/app/features/graphs/flot-charts/flot-charts.component.ts","webpack:///./src/app/features/graphs/flot-charts/flot-charts.module.ts","webpack:///./src/app/features/graphs/flot-charts/flot-charts.routing.ts","webpack:///./src/app/features/graphs/flot-charts/flot-examples.ts"],"names":[],"mappings":"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","file":"flot-charts-flot-charts-module.js","sourcesContent":["module.exports = \"<!-- MAIN CONTENT -->\\n<div id=\\\"content\\\">\\n\\n  <div class=\\\"row\\\">\\n    <sa-big-breadcrumbs icon=\\\"bar-chart-o\\\" [items]=\\\"['Graphs', 'Flot Chart']\\\" class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-4\\\"></sa-big-breadcrumbs>\\n    <sa-stats></sa-stats>\\n  </div>\\n  <!-- widget grid -->\\n  <sa-widgets-grid>\\n\\n    <!-- row -->\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"flotData\\\">\\n\\n      <article class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n\\n\\n        <div sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Bar Chart</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"flotData.barChartData\\\"\\n                         [options]=\\\"flotExamples.barChartDemoOptions\\\" ></sa-flot-chart>\\n\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n        <div sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Sin Chart</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"flotData.sinChartData\\\"\\n                         [options]=\\\"flotExamples.sinChartDemoOptions\\\" ></sa-flot-chart>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </article>\\n\\n      <article class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6\\\">\\n        <div sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Auto Updating Chart</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"updatingData\\\"\\n                         [options]=\\\"flotExamples.autoUpdatingChartDemoOptions\\\" ></sa-flot-chart>\\n            </div>\\n          </div>\\n        </div>\\n      </article>\\n\\n      <article class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6\\\">\\n        <div sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Horizontal Bar Chart</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"flotData.horizontalBarChartData\\\"\\n                         [options]=\\\"flotExamples.horizontalChartDemoOptions\\\" ></sa-flot-chart>\\n            </div>\\n          </div>\\n        </div>\\n      </article>\\n\\n\\n      <article class=\\\"col-xs-12 col-sm-8 col-md-7 col-lg-7\\\">\\n        <div sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Plot Percentiles</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"flotData.fillChartData\\\"\\n                         [options]=\\\"flotExamples.fillChartDemoOptions\\\" ></sa-flot-chart>\\n            </div>\\n          </div>\\n        </div>\\n      </article>\\n\\n\\n      <article class=\\\"col-xs-12 col-sm-4 col-md-5 col-lg-5\\\">\\n\\n        <div sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Pie Chart</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"flotData.pieChartData\\\"\\n                         [options]=\\\"flotExamples.pieChartDemoOptions\\\" ></sa-flot-chart>\\n            </div>\\n          </div>\\n        </div>\\n      </article>\\n      <article class=\\\"col-xs-12\\\">\\n\\n        <div sa-widget [editbutton]=\\\"false\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\"> <i class=\\\"fa fa-bar-chart-o\\\"></i> </span>\\n\\n            <h2>Site Stats Chart</h2>\\n          </header>\\n\\n          <div>\\n            <div class=\\\"widget-body \\\">\\n              <sa-flot-chart [data]=\\\"flotData.siteStatsData\\\"\\n                         [options]=\\\"flotExamples.siteStatsDemoOptions\\\" ></sa-flot-chart>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n      </article>\\n\\n\\n    </div>\\n\\n    <!-- end row -->\\n\\n  </sa-widgets-grid>\\n  <!-- end widget grid -->\\n\\n</div>\\n<!-- END MAIN CONTENT -->\\n\"","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport * as examples from \"./flot-examples\"\nimport {FakeDataSource} from \"./flot-examples\";\nimport { JsonApiService } from '@app/core/services';\n\n@Component({\n  selector: 'sa-flot-charts',\n  templateUrl: './flot-charts.component.html',\n})\nexport class FlotChartsComponent implements OnInit, OnDestroy {\n\n  public flotData:any;\n  public flotExamples:any;\n\n\n  public updatingData: Array<any>;\n\n  constructor(private jsonApiService:JsonApiService) {\n  }\n\n  ngOnInit() {\n    this.jsonApiService.fetch( '/graphs/flot.json').subscribe(data => this.flotData = data);\n    this.flotExamples = examples;\n\n    this.interval = setInterval(()=>{\n      this.updateStats()\n    }, 1000);\n    this.updateStats()\n  }\n\n  updateStats() {\n    this.updatingData = [FakeDataSource.getRandomData()]\n  }\n\n  private interval;\n\n  ngOnDestroy() {\n    clearInterval(this.interval);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { flotChartsRouting } from './flot-charts.routing';\nimport { FlotChartsComponent } from './flot-charts.component';\nimport { FlotChartModule } from '@app/shared/graphs/flot-chart/flot-chart.module';\nimport { SharedModule } from '@app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    flotChartsRouting,\n    SharedModule,\n    FlotChartModule\n  ],\n  declarations: [FlotChartsComponent]\n})\nexport class FlotChartsModule { }\n","\nimport {ModuleWithProviders} from \"@angular/core\"\nimport { Routes, RouterModule } from '@angular/router';\nimport {FlotChartsComponent} from \"./flot-charts.component\";\n\nexport const flotChartsRoutes: Routes = [\n  {\n    path: '',\n    component: FlotChartsComponent\n  },\n];\n\nexport const flotChartsRouting = RouterModule.forChild(flotChartsRoutes);\n\n","\nexport const colors = {\n  \"chartBorderColor\": \"#efefef\",\n  \"chartGridColor\": \"#DDD\",\n  \"charMain\": \"#E24913\",\n  \"chartSecond\": \"#6595b4\",\n  \"chartThird\": \"#FF9F01\",\n  \"chartFourth\": \"#7e9d3a\",\n  \"chartFifth\": \"#BD362F\",\n  \"chartMono\": \"#000\"\n};\n\nexport const barChartDemoOptions = {\n  colors: [colors.chartSecond, colors.chartFourth, \"#666\", \"#BBB\"],\n  grid: {\n    show: true,\n    hoverable: true,\n    clickable: true,\n    tickColor: colors.chartBorderColor,\n    borderWidth: 0,\n    borderColor: colors.chartBorderColor\n  },\n  legend: true,\n  tooltip: true,\n  tooltipOpts: {\n    content: \"<b>%x</b> = <span>%y</span>\",\n    defaultTheme: false\n  }\n};\n\nexport const sinChartDemoOptions = {\n  series: {\n    lines: {\n      show: true\n    },\n    points: {\n      show: true\n    }\n  },\n  grid: {\n    hoverable: true,\n    clickable: true,\n    tickColor: colors.chartBorderColor,\n    borderWidth: 0,\n    borderColor: colors.chartBorderColor\n  },\n  tooltip: true,\n  tooltipOpts: {\n    //content : \"Value <b>$x</b> Value <span>$y</span>\",\n    defaultTheme: false\n  },\n  colors: [colors.chartSecond, colors.chartFourth],\n  yaxis: {\n    min: -1.1,\n    max: 1.1\n  },\n  xaxis: {\n    min: 0,\n    max: 15\n  }\n};\n\nexport const horizontalChartDemoOptions = {\n  colors : [colors.chartSecond, colors.chartFourth, \"#666\", \"#BBB\"],\n  grid : {\n    show : true,\n    hoverable : true,\n    clickable : true,\n    tickColor : colors.chartBorderColor,\n    borderWidth : 0,\n    borderColor : colors.chartBorderColor\n  },\n  legend : true,\n  tooltip : true,\n  tooltipOpts : {\n    content : \"<b>%x</b> = <span>%y</span>\",\n    defaultTheme : false\n  }\n};\n\nexport const salesChartDemoOptions = {\n  xaxis : {\n    mode : \"time\",\n    tickLength : 5\n  },\n  series : {\n    lines : {\n      show : true,\n      lineWidth : 1,\n      fill : true,\n      fillColor : {\n        colors : [{\n          opacity : 0.1\n        }, {\n          opacity : 0.15\n        }]\n      }\n    },\n    //points: { show: true },\n    shadowSize : 0\n  },\n  selection : {\n    mode : \"x\"\n  },\n  grid : {\n    hoverable : true,\n    clickable : true,\n    tickColor : colors.chartBorderColor,\n    borderWidth : 0,\n    borderColor : colors.chartBorderColor\n  },\n  tooltip : true,\n  tooltipOpts : {\n    content : \"Your sales for <b>%x</b> was <span>$%y</span>\",\n    dateFormat : \"%y-%0m-%0d\",\n    defaultTheme : false\n  },\n  colors : [colors.chartSecond]\n\n};\n\nexport const fillChartDemoOptions = {\n  xaxis : {\n    tickDecimals : 0\n  },\n  yaxis : {\n    tickFormatter : function(v) {\n      return v + \" cm\";\n    }\n  }\n};\n\nexport const pieChartDemoOptions = {\n  series : {\n    pie : {\n      show : true,\n      innerRadius : 0.5,\n      radius : 1,\n      label : {\n        show : false,\n        radius : 2 / 3,\n        formatter : function(label, series) {\n          return '<div style=\"font-size:11px;text-align:center;padding:4px;color:white;\">' + label + '<br/>' + Math.round(series.percent) + '%</div>';\n        },\n        threshold : 0.1\n      }\n    }\n  },\n  legend : {\n    show : true,\n    noColumns : 1, // number of colums in legend table\n    labelFormatter : null, // fn: string -> string\n    labelBoxBorderColor : \"#000\", // border color for the little label boxes\n    container : null, // container (as jQuery object) to put legend in, null means default on top of graph\n    position : \"ne\", // position of default legend container within plot\n    margin : [5, 10], // distance from grid edge to default legend container within plot\n    backgroundColor : \"#efefef\", // null means auto-detect\n    backgroundOpacity : 1 // set to 0 to avoid background\n  },\n  grid : {\n    hoverable : true,\n    clickable : true\n  }\n};\n\nexport const siteStatsDemoOptions = {\n  series : {\n    lines : {\n      show : true,\n      lineWidth : 1,\n      fill : true,\n      fillColor : {\n        colors : [{\n          opacity : 0.1\n        }, {\n          opacity : 0.15\n        }]\n      }\n    },\n    points : {\n      show : true\n    },\n    shadowSize : 0\n  },\n  yaxes : [{\n    min : 20,\n    tickLength : 5\n  }],\n  grid : {\n    hoverable : true,\n    clickable : true,\n    tickColor : colors.chartBorderColor,\n    borderWidth : 0,\n    borderColor : colors.chartBorderColor\n  },\n  tooltip : true,\n  tooltipOpts : {\n    content : \"%s for <b>%x:00 hrs</b> was %y\",\n    dateFormat : \"%y-%0m-%0d\",\n    defaultTheme : false\n  },\n  colors : [colors.charMain, colors.chartSecond],\n  xaxis : {\n    mode : \"time\",\n    tickLength : 10,\n    ticks : 15,\n    tickDecimals : 2\n  },\n  yaxis : {\n    ticks : 15,\n    tickDecimals : 0\n  }\n};\n\nexport const autoUpdatingChartDemoOptions = {\n  yaxis : {\n    min : 0,\n    max : 100\n  },\n  xaxis : {\n    min : 0,\n    max : 100\n  },\n  colors : [colors.chartFourth],\n  series : {\n    lines : {\n      lineWidth : 1,\n      fill : true,\n      fillColor : {\n        colors : [{\n          opacity : 0.4\n        }, {\n          opacity : 0\n        }]\n      },\n      steps : false\n    }\n  }\n};\n\n\nexport const FakeDataSource = {\n  data: [],\n  total: 200,\n  getRandomData: function(){\n    if (this.data.length > 0)\n      this.data = this.data.slice(1);\n\n    // do a random walk\n    while (this.data.length < this.total) {\n      var prev = this.data.length > 0 ? this.data[this.data.length - 1] : 50;\n      var y = prev + Math.random() * 10 - 5;\n      if (y < 0)\n        y = 0;\n      if (y > 100)\n        y = 100;\n      this.data.push(y);\n    }\n\n    // zip the generated y values with the x values\n    var res = [];\n    for (var i = 0; i < this.data.length; ++i)\n      res.push([i, this.data[i]])\n    return res;\n  }\n};\n"],"sourceRoot":""}